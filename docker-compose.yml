version: '3.8'


services:
  frontend:
    depends_on:
      - kafka
      - keycloak
    container_name: "frontend_api_dev"
    image: "frontend_api_dev"
    environment:
      NODE_ENV: dev
      KAKFA_API_CONNECT: kafka_sad:9092
      KEYCLOAK_API_CONNECT: keycloak_sad:8080
      KEYCLOAK_REALM: testing_realm
      KEYCLOAK_CLIENT_ID: rest-api-client
      KEYCLOAK_SECRET: ZMSMQL8qdlHzZ47ne4uAu9tCADIwMbiV
    build:
      context: ./frontend/
      target: "dev"
      dockerfile: Dockerfile
    entrypoint: ["npm", "run", "start:dev"]
    ports:
      - 3000:3000
    restart: unless-stopped

  worker:
    depends_on:
      - kafka
    container_name: "worker_api_dev"
    image: "worker_api_dev"
    environment:
      NODE_ENV: dev
      KAKFA_API_CONNECT: kafka_sad:9092
    build:
      context: ./worker/
      target: "dev"
      dockerfile: Dockerfile
    entrypoint: ["npm", "run", "start:dev"]
    restart: unless-stopped

  keycloak:
    container_name: "keycloak_sad"
    depends_on:
      - kafka
      #- postgres
    image: quay.io/keycloak/keycloak:20.0.1
    command: 'start-dev'
    ports: 
      - "8080:8080"
    environment: 
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      DB_VENDOR: h2
      #DB_VENDOR: POSTGRES
      #DB_ADDR: postgres
      #DB_DATABASE: keycloak
      #DB_USER: keycloak
      #DB_PASSWORD: password
    volumes: 
      - keycloak-data:/opt/keycloak

#  postgres:
#    image: postgres
#    volumes:
#      - ./postgres-data:/var/lib/postgresql/data
#    environment:
#      POSTGRES_DB: keycloak
#      POSTGRES_USER: keycloak
#      POSTGRES_PASSWORD: password

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
  
  kafka:
    container_name: "kafka_sad"
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - 9092:9092
    links:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "test,test_response"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  default: 
    name: sad-net

volumes:
  keycloak-data:
    driver: local