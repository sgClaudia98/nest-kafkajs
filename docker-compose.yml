version: '3.8'
services:
  api:
    depends_on:
      - kafka
      - keycloak
    container_name: "hrm_api_${NODE_ENV}"
    image: "hrm_api_${NODE_ENV}"
    environment:
      NODE_ENV: ${NODE_ENV}
      API_KAKFA_CONNECT: kafka:9092
      API_KEYCLOAK_CONNECT: keycloak:8080
    build:
      context: ./
      target: "${NODE_ENV}"
      dockerfile: Dockerfile
    entrypoint: ["npm", "run", "start:${NODE_ENV}"]
    ports:
      - 3000:3000
    volumes:
      - ./:/usr/src/app
      - /usr/src/app/node_modules
    restart: unless-stopped
    networks:
      - kafka-net

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.1
    command: 'start-dev'
    ports: 
      - "8080:8080"
    environment: 
      - 'KEYCLOAK_ADMIN=admin'
      - 'KEYCLOAK_ADMIN_PASSWORD=admin'
      - 'KEYCLOAK_IMPORT=/tmp/realm-export.json'
      - 'DB_VENDOR=h2'
    volumes: 
      - ./tmp/realm-export.json:/tmp/realm-export.json

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - kafka-net
  
  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    ports:
      - 9092:9092
      - 9094:9094
    links:
      - zookeeper
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "test,test_response"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_LISTENERS: INTERNAL://:9092,OUTSIDE://:9094
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,OUTSIDE://host.docker.internal:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-net
networks:
  kafka-net: